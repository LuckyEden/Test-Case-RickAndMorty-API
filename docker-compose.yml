version: '3.8'

services:
  postgresql:
      image: postgres:14.2-alpine
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: password123
        POSTGRES_DB: fastapi-db
      ports:
        - "5432:5432"
      volumes:
        - ./pgdata:/var/lib/postgresql/data 

      healthcheck:
        test: ["CMD-SHELL", "pg_isready"]
        interval: 10s
        timeout: 5s
        retries: 5

  redis:
    image: redis:6.2.7
    ports:
      - "6379:6379"
    volumes:
      - redis:/data

  rabbitmq:
    image: rabbitmq:3.9.7
    ports:
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=rabbit
      - RABBITMQ_DEFAULT_PASS=password

  fast_api:
    build:
      context: ./test-case-backend
      dockerfile: Dockerfile
    container_name: fastapi
    ports:
      - "8000:8000"
    depends_on:
      postgresql: 
          condition: service_healthy
    volumes:
      - ./test-case-backend:/app 
    environment:
      - ENVIRONMENT=production
      - DEBUG=1
      - POSTGRES_URL=postgresql+asyncpg://postgres:password123@postgresql:5432/fastapi-db
      - REDIS_URL=redis://redis:6379/7
      - CELERY_BROKER_URL=amqp://rabbit:password@rabbitmq:5672
      - CELERY_BACKEND_URL=redis://redis:6379/0
    command: bash -c "make migrate && make run"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://fastapi:8000/v1/health-check"]
      interval: 60s
      timeout: 30s
      retries: 5 

  frontend:
    build:
      context: ./test-case
      dockerfile: Dockerfile
      
    container_name: react-frontend
    ports:
      - "80:80"
    volumes:
      - ./test-case:/app 
    depends_on:
      fast_api:
          condition: service_healthy
    environment:
      - MY_APP_RICK_AND_MORTY_API_URL=http://localhost:8000/v1
     

volumes:
  redis: 
 